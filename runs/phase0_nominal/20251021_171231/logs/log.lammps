LAMMPS (22 Jul 2025)
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread.
  using 1 OpenMP thread(s) per MPI task
units          ${UNITS}
units          metal
atom_style     charge
boundary       ${BX} ${BY} ${BZ}
boundary       p ${BY} ${BZ}
boundary       p p ${BZ}
boundary       p p p

# ---------- read structure ----------
read_data      ${DATAFILE}
read_data      inputs/structure/data.ceo2_4x4x8nm.lmp
Reading data file ...
  orthogonal box = (0 0 0) to (43.739603 43.739603 82.011755)
  1 by 1 by 1 MPI processor grid
  reading atoms ...
  11520 atoms
  read_data CPU = 0.024 seconds

# ---------- neighbor & thermo policy ----------
neighbor       2.0 bin
neigh_modify   delay 0 every 1 check yes

variable       thermo_every equal 100
thermo_style   custom step time temp press pe ke etotal evdwl ecoul elong
thermo         ${thermo_every}
thermo         100

# ----- output directory for dumps (from runner) -----
# compact thermo time series for analysis
variable s equal step
variable t equal time
variable T equal temp
variable P equal press
variable PE equal pe
variable KE equal ke
variable ET equal etotal
fix f_thermo all ave/time ${thermo_every} 1 ${thermo_every} v_s v_t v_T v_P v_PE v_KE v_ET file ${OUTDIR}/dumps/thermo.dat ave one
fix f_thermo all ave/time 100 1 ${thermo_every} v_s v_t v_T v_P v_PE v_KE v_ET file ${OUTDIR}/dumps/thermo.dat ave one
fix f_thermo all ave/time 100 1 100 v_s v_t v_T v_P v_PE v_KE v_ET file ${OUTDIR}/dumps/thermo.dat ave one
fix f_thermo all ave/time 100 1 100 v_s v_t v_T v_P v_PE v_KE v_ET file runs/phase0_nominal/20251021_171231/dumps/thermo.dat ave one


# ---------- echo key parameters to the log for provenance
print "UNITS=${UNITS}, DT(ps)=${DT}, NSTEPS=${NSTEPS}"        append yes
UNITS=metal, DT(ps)=0.0005, NSTEPS=400
print "BOUNDARY=(${BX},${BY},${BZ})"                           append yes
BOUNDARY=(p,p,p)
print "DATAFILE=${DATAFILE}"                                   append yes
DATAFILE=inputs/structure/data.ceo2_4x4x8nm.lmp
print "TTM: R0(nm)=${R0}, Se(eV/Ã…)=${SE}, g0(W/m^3/K)=${G0}"  append yes
WARNING: Detected non-ASCII characters in input. Will try to continue by replacing with ASCII equivalents where known. (src/input.cpp:478)
TTM: R0(nm)=4.5, Se(eV/…)=27, g0(W/m^3/K)=7.4e+16
print "TTM files: ke='${KE_FILE}', Ce='${CE_FILE}', grid='${GRID_FILE}', src='${SRC_FILE}'" append yes
TTM files: ke='${KE_FILE}', Ce='${CE_FILE}', grid='${GRID_FILE}', src='${SRC_FILE}'

# ---------- include directories
# This deck is run from the repo root; adjust if you change invocation.
variable       INC_DIR string inputs/lammps/includes

# ---------- force field & electrostatics (fragments) ----------
include        ${INC_DIR}/pair_ceo2_buck.in       # Buckingham + Coulomb long-range
include        inputs/lammps/includes/pair_ceo2_buck.in       
variable rc_buck equal 10.0
pair_style   buck/coul/long ${rc_buck}
pair_style   buck/coul/long 10
pair_modify  mix arithmetic
include inputs/lammps/includes/params/ceo2_buck.params
# Buckingham coefficients for fluorite CeO2 (rigid-ion)
# Form: A [eV], rho [Ã…], C [eVÂ·Ã…^6], cutoff [Ã…]
# Source: Sayle et al., Nanoscale 2011, 3, 1823â€“1837, Table 1. (Oâ€“O, Ceâ€“O; Ceâ€“Ce set to zero)

# Oâ€“O
pair_coeff 2 2  22764.30   0.149   27.89   ${rc_buck}
pair_coeff 2 2  22764.30   0.149   27.89   10

# Ceâ€“O
pair_coeff 1 2   1986.83   0.351   20.40   ${rc_buck}
pair_coeff 1 2   1986.83   0.351   20.40   10

# Ceâ€“Ce (short-range off; Coulomb only). LAMMPS requires a rho even when A=C=0.
pair_coeff 1 1      0.0     1.0      0.0   ${rc_buck}
pair_coeff 1 1      0.0     1.0      0.0   10
include        ${INC_DIR}/pair_zbl_overlay.in     # ZBL overlay for short-range regularization
include        inputs/lammps/includes/pair_zbl_overlay.in     
# ------------------------------------------------------------
# ZBL overlay for short-range regularization in CeO2
# Switch to hybrid/overlay so ZBL acts at very small r,
# while Buckingham + long-range Coulomb control normal bonding..
#
# Prereq: variable rc_buck defined in pair_ceo2_buck.in (fallback: 10 Ã…).
# Types: 1 = Ce4+ (Z=58), 2 = O2- (Z=8)
# Units: metal (Ã…, ps, eV, ...).
# ------------------------------------------------------------

# Atomic numbers for ZBL
variable Z_Ce equal 58
variable Z_O  equal 8

variable rc_buck equal ${rc_buck}
variable rc_buck equal 10
if "${rc_buck} <= 0.0" then "variable rc_buck equal 10.0"

pair_style hybrid/overlay buck/coul/long ${rc_buck} zbl 0.5 1.5
pair_style hybrid/overlay buck/coul/long 10 zbl 0.5 1.5

include inputs/lammps/includes/params/ceo2_buck_hybrid.params
# ------------------------------------------------------------
# Buckingham coefficients for fluorite CeO2 (rigid-ion) â€” hybrid syntax
# Form: pair_coeff i j buck/coul/long  A[eV]  rho[Ã…]  C[eVÂ·Ã…^6]  rc[Ã…]
# Source: Sayle et al., Nanoscale 2011, 3, 1823â€“1837, Table 1 (Ce4+â€“O2âˆ’, O2âˆ’â€“O2âˆ’; Ceâ€“Ce short-range = 0)
# ------------------------------------------------------------

# Oâ€“O
pair_coeff 2 2 buck/coul/long  22764.30   0.149   27.89   ${rc_buck}
pair_coeff 2 2 buck/coul/long  22764.30   0.149   27.89   10

# Ceâ€“O
pair_coeff 1 2 buck/coul/long   1986.83   0.351   20.40   ${rc_buck}
pair_coeff 1 2 buck/coul/long   1986.83   0.351   20.40   10

# Ceâ€“Ce (short-range off; Coulomb only). rho may be any positive number when A=C=0.
pair_coeff 1 1 buck/coul/long      0.0     1.0      0.0   ${rc_buck}
pair_coeff 1 1 buck/coul/long      0.0     1.0      0.0   10

pair_coeff 1 1 zbl ${Z_Ce} ${Z_Ce}
pair_coeff 1 1 zbl 58 ${Z_Ce}
pair_coeff 1 1 zbl 58 58
pair_coeff 1 2 zbl ${Z_Ce} ${Z_O}
pair_coeff 1 2 zbl 58 ${Z_O}
pair_coeff 1 2 zbl 58 8
pair_coeff 2 2 zbl ${Z_O}  ${Z_O}
pair_coeff 2 2 zbl 8  ${Z_O}
pair_coeff 2 2 zbl 8  8
include        ${INC_DIR}/kspace_pppm.in          # PPPM accuracy / mesh
include        inputs/lammps/includes/kspace_pppm.in          
# ------------------------------------------------------------
# kspace_pppm.in â€” Long-range electrostatics via PPPM
# CeO2 rigid-ion model: Coulomb handled in k-space; short-range is Buckingham.
# Units: metal  (Ã…, ps, eV, g/mol, K)
# Prereq: pair style uses *coul/long*
# ------------------------------------------------------------


variable kspace_acc   equal 1.0e-4
variable kspace_order equal 5


# --- Activate PPPM with the chosen accuracy --
kspace_style  pppm ${kspace_acc}
kspace_style  pppm 0.0001


kspace_modify order ${kspace_order}
kspace_modify order 5

# kspace_modify mesh 64 64 128   # Nx Ny Nz; otherwise LAMMPS selects automatically

# --- Provenance echo to log ---
print "PPPM: accuracy=${kspace_acc} (force RMS), order=${kspace_order}" append yes
PPPM: accuracy=0.0001 (force RMS), order=5
include        ${INC_DIR}/rim_langevin.in         # xâ€“y rim region + Langevin damping
include        inputs/lammps/includes/rim_langevin.in         
# ------------------------------------------------------------
# rim_langevin.in â€” Define xâ€“y rim region and apply Langevin damping
#
# Purpose: Create a thin "sponge" rim near the x and y box boundaries
#          and apply a Langevin thermostat to that rim only, to absorb
#          pressure waves/heat. The interior group is defined elsewhere
#          as `group interior subtract all rim`.
#
# Optional input variables (may be -var from launcher or set here):
#   RIM_WIDTH_NM  â€” rim thickness [nm]    (default: 1.5 nm)
#   RIM_GAMMA     â€” damping Î³ [ps^-1]     (default: 1.0 ps^-1)
#   RIM_TK        â€” target temperature K  (default: 300 K)
#
# Units: metal (Ã…, ps, eV, ...)
# ------------------------------------------------------------

variable rim_w_A    equal ${RIM_WIDTH_NM}*10.0
variable rim_w_A    equal 1.5*10.0

# Box bounds (Ã…)
variable bxlo equal xlo
variable bxhi equal xhi
variable bylo equal ylo
variable byhi equal yhi

# Convenience: precompute slabs
variable x_cut_hi equal v_bxhi - v_rim_w_A
variable x_cut_lo equal v_bxlo + v_rim_w_A
variable y_cut_hi equal v_byhi - v_rim_w_A
variable y_cut_lo equal v_bylo + v_rim_w_A

# Four slab regions near x/y boundaries; union them into one rim region
region rim_xlo block ${bxlo}     ${x_cut_lo}  INF INF  INF INF  units box
region rim_xlo block 0     ${x_cut_lo}  INF INF  INF INF  units box
region rim_xlo block 0     15  INF INF  INF INF  units box
region rim_xhi block ${x_cut_hi} ${bxhi}           INF INF  INF INF  units box
region rim_xhi block 28.7396027821217 ${bxhi}           INF INF  INF INF  units box
region rim_xhi block 28.7396027821217 43.7396027821217           INF INF  INF INF  units box
region rim_ylo block INF INF  ${bylo}     ${y_cut_lo}  INF INF units box
region rim_ylo block INF INF  0     ${y_cut_lo}  INF INF units box
region rim_ylo block INF INF  0     15  INF INF units box
region rim_yhi block INF INF  ${y_cut_hi} ${byhi}             INF INF units box
region rim_yhi block INF INF  28.7396027821217 ${byhi}             INF INF units box
region rim_yhi block INF INF  28.7396027821217 43.7396027821217             INF INF units box

region rim union 4 rim_xlo rim_xhi rim_ylo rim_yhi

# Materialize the group (idempotent)
group rim region rim
10065 atoms in group rim

# ---- Langevin thermostat on rim only ----
# Translate Î³ [ps^-1] to damp time [ps]:  damp = 1/Î³ (protect against Î³<=0)
variable rim_damp_ps equal ( ${RIM_GAMMA} > 0.0 ) ? (1.0/${RIM_GAMMA}) : 1.0
variable rim_damp_ps equal ( 1 > 0.0 ) ? (1.0/${RIM_GAMMA}) : 1.0
variable rim_damp_ps equal ( 1 > 0.0 ) ? (1.0/1) : 1.0

# Use a dedicated temperature compute for the rim group
compute c_rim_temp rim temp

# Seed policy: reuse VEL_SEED if defined; otherwise a fixed constant
variable RIM_SEED equal 24680

fix f_rim_langevin rim langevin ${RIM_TK} ${RIM_TK} ${rim_damp_ps} ${RIM_SEED}
fix f_rim_langevin rim langevin 300 ${RIM_TK} ${rim_damp_ps} ${RIM_SEED}
fix f_rim_langevin rim langevin 300 300 ${rim_damp_ps} ${RIM_SEED}
ERROR: Variable rim_damp_ps: Invalid syntax in variable formula (src/variable.cpp:2604)
