# in.main.lmp - Phase 0 (debug breadcrumbs)

log ${OUTDIR}/logs/log.lammps
echo both

print "== MAIN: start =="

units          ${UNITS}
atom_style     charge
boundary       ${BX} ${BY} ${BZ}
print "== MAIN: after units/boundary =="

read_data      ${DATAFILE}
mass 1 140.116
mass 2 15.999
print "== MAIN: after read_data + masses =="

neighbor       2.0 bin
neigh_modify   delay 0 every 1 check yes
variable thermo_every equal 100
thermo_style   custom step time temp press pe ke etotal evdwl ecoul elong
thermo         ${thermo_every}
thermo_modify  flush yes lost warn
print "== MAIN: after thermo setup =="

# compact thermo writer (robust: fix print)
variable s  equal step
variable t  equal time
variable T  equal temp
variable P  equal press
variable PE equal pe
variable KE equal ke
variable ET equal etotal
print "step time T P PE KE ET" file "${OUTDIR}/dumps/thermo.dat" screen no
fix f_thermoprint all print ${thermo_every} "${s} ${t} ${T} ${P} ${PE} ${KE} ${ET}" file "${OUTDIR}/dumps/thermo.dat" screen no append yes
dump dtraj all custom 200 ${OUTDIR}/dumps/traj.dump id type x y z
dump_modify dtraj sort id
print "== MAIN: after writers =="

print "== INCLUDE: kspace_pppm.in (pppm+slab) =="
include        inputs/lammps/includes/kspace_pppm.in
print "== MAIN: after kspace =="

print "== INCLUDE: pair_ceo2_buck.in (NO ZBL) =="
include        inputs/lammps/includes/pair_ceo2_buck.in
print "== MAIN: after buck/coul/long =="

# Enable ZBL later - first prove the baseline works
# print "== INCLUDE: pair_zbl_overlay.in (ZBL overlay) =="
# include        inputs/lammps/includes/pair_zbl_overlay.in
# print "== MAIN: after ZBL overlay =="

print "== INCLUDE: rim_langevin.in =="
include        inputs/lammps/includes/rim_langevin.in
print "== MAIN: after rim =="

timestep       ${DT}
print "== MAIN: include equil =="
include        inputs/lammps/in.equil.lmp
print "== MAIN: include ttm_spike =="
include        inputs/lammps/in.ttm_spike.lmp

print "== MAIN: end =="
EOF
